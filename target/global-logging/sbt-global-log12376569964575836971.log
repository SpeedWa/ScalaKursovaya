[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\dimag\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\dimag\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.5 (Oracle Corporation Java 17)
[debug]       Load.loadUnit: plugins took 89.8004ms
[debug]       Load.loadUnit: defsScala took 0.2926ms
[debug] [Loading] Scanning directory C:\Users\dimag\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\dimag\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 11.9212 ms
[debug]           Load.resolveProject(global-plugins) took 31.5865ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\dimag\.sbt\1.0\plugins, plugins: List(<none>))) took 57.4566ms
[debug] [Loading] Done in C:\Users\dimag\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 77.5442ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.3133ms
[debug]     Load.loadUnit(file:/C:/Users/dimag/.sbt/1.0/plugins/, ...) took 178.3804ms
[debug]   Load.apply: load took 313.8174ms
[debug]   Load.apply: resolveProjects took 4.4365ms
[debug]   Load.apply: finalTransforms took 56.5275ms
[debug]   Load.apply: config.delegates took 7.4985ms
[debug]   Load.apply: Def.make(settings)... took 464.455ms
[debug]   Load.apply: structureIndex took 94.0105ms
[debug]   Load.apply: mkStreams took 2.7992ms
[info] loading global plugins from C:\Users\dimag\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 2406.5849ms
[debug]           Load.loadUnit: plugins took 17.0713ms
[debug]           Load.loadUnit: defsScala took 0.003ms
[debug] [Loading] Scanning directory C:\Users\dimag\IdeaProjects\akkaKr\project
[debug]             Load.loadUnit: mkEval took 5.1289ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\dimag\IdeaProjects\akkaKr\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.848 ms
[info] loading settings for project akkakr-build from idea.sbt ...
[debug]               Load.resolveProject(akkakr-build) took 7.3974ms
[debug]             Load.loadTransitive: finalizeProject(Project(id akkakr-build, base: C:\Users\dimag\IdeaProjects\akkaKr\project, plugins: List(<none>))) took 9.8459ms
[debug] [Loading] Done in C:\Users\dimag\IdeaProjects\akkaKr\project, returning: (akkakr-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 1832.376ms
[debug]           Load.loadUnit: cleanEvalClasses took 4.5969ms
[debug]         Load.loadUnit(file:/C:/Users/dimag/IdeaProjects/akkaKr/project/, ...) took 1854.8012ms
[debug]       Load.apply: load took 1856.1118ms
[debug]       Load.apply: resolveProjects took 0.1605ms
[debug]       Load.apply: finalTransforms took 11.1464ms
[debug]       Load.apply: config.delegates took 0.6675ms
[debug]       Load.apply: Def.make(settings)... took 72.7767ms
[debug]       Load.apply: structureIndex took 24.0382ms
[debug]       Load.apply: mkStreams took 0.0022ms
[info] loading project definition from C:\Users\dimag\IdeaProjects\akkaKr\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 3710.8035ms
[debug]     Load.loadUnit: defsScala took 0.0033ms
[debug] [Loading] Scanning directory C:\Users\dimag\IdeaProjects\akkaKr
[debug]       Load.loadUnit: mkEval took 0.7511ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.946 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 23.9864ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\dimag\IdeaProjects\akkaKr, plugins: List(<none>))) took 28.3658ms
[debug] [Loading] Done in C:\Users\dimag\IdeaProjects\akkaKr, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 680.4579ms
[debug]     Load.loadUnit: cleanEvalClasses took 4.795ms
[debug]   Load.loadUnit(file:/C:/Users/dimag/IdeaProjects/akkaKr/, ...) took 4396.8892ms
[debug] Load.apply: load took 4398.1201ms
[debug] Load.apply: resolveProjects took 0.1007ms
[debug] Load.apply: finalTransforms took 23.8442ms
[debug] Load.apply: config.delegates took 0.2371ms
[debug] Load.apply: Def.make(settings)... took 64.2124ms
[debug] Load.apply: structureIndex took 15.3266ms
[debug] Load.apply: mkStreams took 0.0039ms
[info] set current project to akka-http-quickstart-scala (in build file:/C:/Users/dimag/IdeaProjects/akkaKr/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 51809 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 51809, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to akka-http-quickstart-scala (in build file:/C:/Users/dimag/IdeaProjects/akkaKr/)
[debug] > Exec(idea-shell, None, None)
